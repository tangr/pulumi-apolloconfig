// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Pulumi Webhooks allow you to notify external services of events happening within your Pulumi organization or stack. For example, you can trigger a notification whenever a stack is updated. Whenever an event occurs, Pulumi will send an HTTP POST request to all registered webhooks. The webhook can then be used to emit some notification, start running integration tests, or even update additional stacks.
 *
 * ### Import
 *
 * Pulumi webhooks can be imported using the `id`, which for webhooks is `{org}/{project}/{stack}/{webhook-name}` e.g.,
 *
 * ```sh
 *  $ pulumi import apolloconfig:index:Webhook my_webhook my-org/my-project/my-stack/4b0d0671
 * ```
 */
export class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Webhook {
        return new Webhook(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'apolloconfig:index:Webhook';

    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Webhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhook.__pulumiType;
    }

    /**
     * Indicates whether this webhook is enabled or not.
     */
    public readonly active!: pulumi.Output<boolean>;
    /**
     * The friendly name displayed in the Pulumi Cloud.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Name of the environment. Only specified if this is an environment webhook.
     */
    public readonly environmentName!: pulumi.Output<string | undefined>;
    /**
     * Optional set of filters to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#filters) for more information.
     */
    public readonly filters!: pulumi.Output<enums.WebhookFilters[] | undefined>;
    /**
     * Format of the webhook payload. Can be either `raw`, `slack`, `ms_teams` or `pulumi_deployments`. Defaults to `raw`.
     */
    public readonly format!: pulumi.Output<enums.WebhookFormat>;
    /**
     * Optional set of filter groups to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#groups) for more information.
     */
    public readonly groups!: pulumi.Output<enums.WebhookGroup[] | undefined>;
    /**
     * Webhook identifier generated by Pulumi Cloud.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Name of the organization.
     */
    public readonly organizationName!: pulumi.Output<string>;
    /**
     * URL to send request to.
     */
    public readonly payloadUrl!: pulumi.Output<string>;
    /**
     * Name of the project. Only specified if this is a stack or environment webhook.
     */
    public readonly projectName!: pulumi.Output<string | undefined>;
    /**
     * Optional. secret used as the HMAC key. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#headers) for more information.
     */
    public readonly secret!: pulumi.Output<string | undefined>;
    /**
     * Name of the stack. Only specified if this is a stack webhook.
     */
    public readonly stackName!: pulumi.Output<string | undefined>;

    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.active === undefined) && !opts.urn) {
                throw new Error("Missing required property 'active'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.organizationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationName'");
            }
            if ((!args || args.payloadUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'payloadUrl'");
            }
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["environmentName"] = args ? args.environmentName : undefined;
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["format"] = (args ? args.format : undefined) ?? "raw";
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["organizationName"] = args ? args.organizationName : undefined;
            resourceInputs["payloadUrl"] = args ? args.payloadUrl : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["secret"] = args?.secret ? pulumi.secret(args.secret) : undefined;
            resourceInputs["stackName"] = args ? args.stackName : undefined;
            resourceInputs["name"] = undefined /*out*/;
        } else {
            resourceInputs["active"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["environmentName"] = undefined /*out*/;
            resourceInputs["filters"] = undefined /*out*/;
            resourceInputs["format"] = undefined /*out*/;
            resourceInputs["groups"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["organizationName"] = undefined /*out*/;
            resourceInputs["payloadUrl"] = undefined /*out*/;
            resourceInputs["projectName"] = undefined /*out*/;
            resourceInputs["secret"] = undefined /*out*/;
            resourceInputs["stackName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Webhook.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    /**
     * Indicates whether this webhook is enabled or not.
     */
    active: pulumi.Input<boolean>;
    /**
     * The friendly name displayed in the Pulumi Cloud.
     */
    displayName: pulumi.Input<string>;
    /**
     * Name of the environment. Only specified if this is an environment webhook.
     */
    environmentName?: pulumi.Input<string>;
    /**
     * Optional set of filters to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#filters) for more information.
     */
    filters?: pulumi.Input<pulumi.Input<enums.WebhookFilters>[]>;
    /**
     * Format of the webhook payload. Can be either `raw` or `slack`. Defaults to `raw`.
     */
    format?: pulumi.Input<enums.WebhookFormat>;
    /**
     * Optional set of filter groups to apply to the webhook. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#groups) for more information.
     */
    groups?: pulumi.Input<pulumi.Input<enums.WebhookGroup>[]>;
    /**
     * Name of the organization.
     */
    organizationName: pulumi.Input<string>;
    /**
     * URL to send request to.
     */
    payloadUrl: pulumi.Input<string>;
    /**
     * Name of the project. Only specified if this is a stack or environment webhook.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Optional. secret used as the HMAC key. See [webhook docs](https://www.pulumi.com/docs/intro/pulumi-service/webhooks/#headers) for more information.
     */
    secret?: pulumi.Input<string>;
    /**
     * Name of the stack. Only needed if this is a stack webhook.
     */
    stackName?: pulumi.Input<string>;
}

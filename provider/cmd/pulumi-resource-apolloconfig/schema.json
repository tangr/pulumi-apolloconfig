{
  "name": "apolloconfig",
  "displayName": "Pulumi Cloud",
  "description": "A native Pulumi package for creating and managing Pulumi Cloud constructs",
  "homepage": "https://pulumi.com",
  "repository": "https://github.com/tangr/pulumi-apolloconfig",
  "keywords": [
    "pulumi",
    "kind/native",
    "category/infrastructure"
  ],
  "license": "Apache-2.0",
  "publisher": "Pulumi",
  "config": {
    "variables": {
      "accessToken": {
        "type": "string",
        "secret": true
      }
    }
  },
  "provider": {
    "type": "object",
    "inputProperties": {
      "accessToken": {
        "description": "Access Token to authenticate with Pulumi Cloud.",
        "type": "string",
        "secret": true
      }
    }
  },
  "types": {
    "apolloconfig:index:TeamStackPermissionScope": {
      "type": "number",
      "enum": [
        {
          "name": "read",
          "description": "Grants read permissions to stack.",
          "value": 101
        },
        {
          "name": "edit",
          "description": "Grants edit permissions to stack.",
          "value": 102
        },
        {
          "name": "admin",
          "description": "Grants admin permissions to stack.",
          "value": 103
        }
      ]
    },
    "apolloconfig:index:WebhookFormat": {
      "type": "string",
      "enum": [
        {
          "description": "The default webhook format.",
          "value": "raw"
        },
        {
          "description": "Messages formatted for consumption by Slack incoming webhooks.",
          "value": "slack"
        },
        {
          "value": "pulumi_deployments",
          "description": "Initiate deployments on a stack from a Pulumi Cloud webhook.",
          "name": "PulumiDeployments"
        },
        {
          "value": "ms_teams",
          "description": "Messages formatted for consumption by Microsoft Teams incoming webhooks.",
          "name": "MicrosoftTeams"
        }
      ]
    },
    "apolloconfig:index:WebhookGroup": {
      "type": "string",
      "enum": [
        {
          "value": "stacks",
          "description": "A group of webhooks containing all stack events.",
          "name": "Stacks"
        },
        {
          "value": "deployments",
          "description": "A group of webhooks containing all deployment events.",
          "name": "Deployments"
        },
        {
          "value": "environments",
          "description": "A group of webhooks containing all environment events.",
          "name": "Environments"
        }
      ]
    },
    "apolloconfig:index:WebhookFilters": {
      "type": "string",
      "enum": [
        {
          "value": "stack_created",
          "description": "Trigger a webhook when a stack is created. Only valid for org webhooks.",
          "name": "StackCreated"
        },
        {
          "value": "stack_deleted",
          "description": "Trigger a webhook when a stack is deleted. Only valid for org webhooks.",
          "name": "StackDeleted"
        },
        {
          "value": "update_succeeded",
          "description": "Trigger a webhook when a stack update succeeds.",
          "name": "UpdateSucceeded"
        },
        {
          "value": "update_failed",
          "description": "Trigger a webhook when a stack update fails.",
          "name": "UpdateFailed"
        },
        {
          "value": "preview_succeeded",
          "description": "Trigger a webhook when a stack preview succeeds.",
          "name": "PreviewSucceeded"
        },
        {
          "value": "preview_failed",
          "description": "Trigger a webhook when a stack preview fails.",
          "name": "PreviewFailed"
        },
        {
          "value": "destroy_succeeded",
          "description": "Trigger a webhook when a stack destroy succeeds.",
          "name": "DestroySucceeded"
        },
        {
          "value": "destroy_failed",
          "description": "Trigger a webhook when a stack destroy fails.",
          "name": "DestroyFailed"
        },
        {
          "value": "refresh_succeeded",
          "description": "Trigger a webhook when a stack refresh succeeds.",
          "name": "RefreshSucceeded"
        },
        {
          "value": "refresh_failed",
          "description": "Trigger a webhook when a stack refresh fails.",
          "name": "RefreshFailed"
        },
        {
          "value": "deployment_queued",
          "description": "Trigger a webhook when a deployment is queued.",
          "name": "DeploymentQueued"
        },
        {
          "value": "deployment_started",
          "description": "Trigger a webhook when a deployment starts running.",
          "name": "DeploymentStarted"
        },
        {
          "value": "deployment_succeeded",
          "description": "Trigger a webhook when a deployment succeeds.",
          "name": "DeploymentSucceeded"
        },
        {
          "value": "deployment_failed",
          "description": "Trigger a webhook when a deployment fails.",
          "name": "DeploymentFailed"
        },
        {
          "value": "drift_detected",
          "description": "Trigger a webhook when drift is detected.",
          "name": "DriftDetected"
        },
        {
          "value": "drift_detection_succeeded",
          "description": "Trigger a webhook when a drift detection run succeeds, regardless of whether drift is detected.",
          "name": "DriftDetectionSucceeded"
        },
        {
          "value": "drift_detection_failed",
          "description": "Trigger a webhook when a drift detection run fails.",
          "name": "DriftDetectionFailed"
        },
        {
          "value": "drift_remediation_succeeded",
          "description": "Trigger a webhook when a drift remediation run succeeds.",
          "name": "DriftRemediationSucceeded"
        },
        {
          "value": "drift_remediation_failed",
          "description": "Trigger a webhook when a drift remediation run fails.",
          "name": "DriftRemediationFailed"
        },
        {
          "value": "environment_created",
          "description": "Trigger a webhook when a new environment is created.",
          "name": "EnvironmentCreated"
        },
        {
          "value": "environment_deleted",
          "description": "Trigger a webhook when an environment is deleted.",
          "name": "EnvironmentDeleted"
        },
        {
          "value": "environment_revision_created",
          "description": "Trigger a webhook when a new revision is created on an environment.",
          "name": "EnvironmentRevisionCreated"
        },
        {
          "value": "environment_revision_retracted",
          "description": "Trigger a webhook when a revision is retracted on an environment.",
          "name": "EnvironmentRevisionRetracted"
        },
        {
          "value": "environment_revision_tag_created",
          "description": "Trigger a webhook when a revision tag is created on an environment.",
          "name": "EnvironmentRevisionTagCreated"
        },
        {
          "value": "environment_revision_tag_deleted",
          "description": "Trigger a webhook when a revision tag is deleted on an environment.",
          "name": "EnvironmentRevisionTagDeleted"
        },
        {
          "value": "environment_revision_tag_updated",
          "description": "Trigger a webhook when a revision tag is updated on an environment.",
          "name": "EnvironmentRevisionTagUpdated"
        },
        {
          "value": "environment_tag_created",
          "description": "Trigger a webhook when an environment tag is created.",
          "name": "EnvironmentTagCreated"
        },
        {
          "value": "environment_tag_deleted",
          "description": "Trigger a webhook when an environment tag is deleted.",
          "name": "EnvironmentTagDeleted"
        },
        {
          "value": "environment_tag_updated",
          "description": "Trigger a webhook when an environment tag is updated.",
          "name": "EnvironmentTagUpdated"
        },
        {
          "value": "imported_environment_changed",
          "description": "Trigger a webhook when an imported environment has changed.",
          "name": "ImportedEnvironmentChanged"
        }
      ]
    },
    "apolloconfig:index:DeploymentSettingsExecutorContext": {
      "description": "The executor context defines information about the executor where the deployment is executed. If unspecified, the default 'pulumi/pulumi' image is used.",
      "properties": {
        "executorImage": {
          "type": "string",
          "description": "Allows overriding the default executor image with a custom image. E.g. 'pulumi/pulumi-nodejs:latest'"
        }
      },
      "type": "object",
      "required": [
        "executorImage"
      ]
    },
    "apolloconfig:index:DeploymentSettingsSourceContext": {
      "description": "Settings related to the source of the deployment.",
      "properties": {
        "git": {
          "$ref": "#/types/apolloconfig:index:DeploymentSettingsGitSource",
          "description": "Git source settings for a deployment."
        }
      },
      "type": "object"
    },
    "apolloconfig:index:DeploymentSettingsGitSource": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "repoUrl": {
          "type": "string",
          "description": "The repository URL to use for git settings. Should not be specified if there are `gitHub` settings for this deployment."
        },
        "gitAuth": {
          "$ref": "#/types/apolloconfig:index:DeploymentSettingsGitSourceGitAuth",
          "description": "Git authentication configuration for this deployment. Should not be specified if there are `gitHub` settings for this deployment."
        },
        "branch": {
          "type": "string",
          "description": "The branch to deploy. One of either `branch` or `commit` must be specified."
        },
        "commit": {
          "type": "string",
          "description": "The commit to deploy. One of either `branch` or `commit` must be specified."
        },
        "repoDir": {
          "type": "string",
          "description": "The directory within the repository where the Pulumi.yaml is located."
        }
      },
      "type": "object"
    },
    "apolloconfig:index:DeploymentSettingsGitSourceGitAuth": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "sshAuth": {
          "$ref": "#/types/apolloconfig:index:DeploymentSettingsGitAuthSSHAuth",
          "description": "SSH auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined."
        },
        "basicAuth": {
          "$ref": "#/types/apolloconfig:index:DeploymentSettingsGitAuthBasicAuth",
          "description": "Basic auth for git authentication. Only one of `personalAccessToken`, `sshAuth`, or `basicAuth` must be defined."
        }
      },
      "type": "object"
    },
    "apolloconfig:index:DeploymentSettingsGitAuthSSHAuth": {
      "description": "Git source settings for a deployment.",
      "type": "object",
      "properties": {
        "sshPrivateKey": {
          "type": "string",
          "secret": true,
          "description": "SSH private key."
        },
        "password": {
          "type": "string",
          "secret": true,
          "description": "Optional password for SSH authentication."
        }
      },
      "required": [
        "sshPrivateKey"
      ]
    },
    "apolloconfig:index:DeploymentSettingsGitAuthBasicAuth": {
      "description": "Git source settings for a deployment.",
      "properties": {
        "username": {
          "type": "string",
          "secret": true,
          "description": "User name for git basic authentication."
        },
        "password": {
          "type": "string",
          "secret": true,
          "description": "Password for git basic authentication."
        }
      },
      "required": [
        "username",
        "password"
      ],
      "type": "object"
    },
    "apolloconfig:index:DeploymentSettingsGithub": {
      "description": "GitHub settings for the deployment.",
      "properties": {
        "repository": {
          "type": "string",
          "description": "The GitHub repository in the format org/repo."
        },
        "deployCommits": {
          "type": "boolean",
          "description": "Trigger a deployment running `pulumi up` on commit.",
          "default": true
        },
        "previewPullRequests": {
          "type": "boolean",
          "description": "Trigger a deployment running `pulumi preview` when a PR is opened.",
          "default": true
        },
        "pullRequestTemplate": {
          "type": "boolean",
          "description": "Use this stack as a template for pull request review stacks.",
          "default": false
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The paths within the repo that deployments should be filtered to."
        }
      },
      "type": "object"
    },
    "apolloconfig:index:DeploymentSettingsOperationContext": {
      "description": "Settings related to the Pulumi operation environment during the deployment.",
      "properties": {
        "preRunCommands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Shell commands to run before the Pulumi operation executes."
        },
        "environmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Environment variables to set for the deployment."
        },
        "options": {
          "$ref": "#/types/apolloconfig:index:OperationContextOptions",
          "description": "Options to override default behavior during the deployment."
        },
        "oidc": {
          "$ref": "#/types/apolloconfig:index:OperationContextOIDC",
          "description": "OIDC configuration to use during the deployment."
        }
      },
      "type": "object"
    },
    "apolloconfig:index:OperationContextOptions": {
      "type": "object",
      "properties": {
        "skipInstallDependencies": {
          "type": "boolean",
          "description": "Skip the default dependency installation step - use this to customize the dependency installation (e.g. if using yarn or poetry)"
        },
        "skipIntermediateDeployments": {
          "type": "boolean",
          "description": "Skip intermediate deployments (Consolidate multiple deployments of the same type into one deployment)"
        },
        "shell": {
          "type": "string",
          "description": "The shell to use to run commands during the deployment. Defaults to 'bash'."
        },
        "deleteAfterDestroy": {
          "type": "boolean",
          "description": "Whether the stack should be deleted after it is destroyed."
        }
      }
    },
    "apolloconfig:index:OperationContextOIDC": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/types/apolloconfig:index:AWSOIDCConfiguration",
          "description": "AWS-specific OIDC configuration."
        },
        "gcp": {
          "$ref": "#/types/apolloconfig:index:GCPOIDCConfiguration",
          "description": "GCP-specific OIDC configuration."
        },
        "azure": {
          "$ref": "#/types/apolloconfig:index:AzureOIDCConfiguration",
          "description": "Azure-specific OIDC configuration."
        }
      }
    },
    "apolloconfig:index:AWSOIDCConfiguration": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "description": "Duration of the assume-role session in “XhYmZs” format"
        },
        "policyARNs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional set of IAM policy ARNs that further restrict the assume-role session"
        },
        "roleARN": {
          "type": "string",
          "description": "The ARN of the role to assume using the OIDC token."
        },
        "sessionName": {
          "type": "string",
          "description": "The name of the assume-role session."
        }
      },
      "required": [
        "roleARN",
        "sessionName"
      ]
    },
    "apolloconfig:index:GCPOIDCConfiguration": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "The numerical ID of the GCP project."
        },
        "region": {
          "type": "string",
          "description": "The region of the GCP project."
        },
        "workloadPoolId": {
          "type": "string",
          "description": "The ID of the workload pool to use."
        },
        "providerId": {
          "type": "string",
          "description": "The ID of the identity provider associated with the workload pool."
        },
        "serviceAccount": {
          "type": "string",
          "description": "The email address of the service account to use."
        },
        "tokenLifetime": {
          "type": "string",
          "description": "The lifetime of the temporary credentials in “XhYmZs” format."
        }
      },
      "required": [
        "projectId",
        "workloadPoolId",
        "providerId",
        "serviceAccount"
      ]
    },
    "apolloconfig:index:AzureOIDCConfiguration": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client ID of the federated workload identity."
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the federated workload identity."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the federated workload identity."
        }
      },
      "required": [
        "clientId",
        "tenantId",
        "subscriptionId"
      ]
    },
    "apolloconfig:index:PulumiOperation": {
      "type": "string",
      "enum": [
        {
          "description": "Analogous to `pulumi up` command.",
          "value": "update"
        },
        {
          "description": "Analogous to `pulumi preview` command.",
          "value": "preview"
        },
        {
          "description": "Analogous to `pulumi refresh` command.",
          "value": "refresh"
        },
        {
          "description": "Analogous to `pulumi destroy` command.",
          "value": "destroy"
        }
      ]
    },
    "apolloconfig:index:DeploymentSettingsCacheOptions": {
      "description": "Dependency cache settings for the deployment",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable dependency caching",
          "default": false
        }
      },
      "type": "object"
    },
    "apolloconfig:index:EnvironmentPermission": {
      "type": "string",
      "enum": [
        {
          "description": "No permissions.",
          "value": "none"
        },
        {
          "description": "Permission to read environment definition only.",
          "value": "read"
        },
        {
          "description": "Permission to open and read the environment.",
          "value": "open"
        },
        {
          "description": "Permission to open, read and update the environment.",
          "value": "write"
        },
        {
          "description": "Permission for all operations on the environment.",
          "value": "admin"
        }
      ]
    },
    "apolloconfig:index:TemplateSourceDestination": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Destination URL that gets filled in on new project creation."
        }
      }
    }
  },
  "resources": {
    "apolloconfig:index:Stack": {
      "description": "A stack is a collection of resources that share a common lifecycle. Stacks are uniquely identified by their name and the project they belong to.",
        "properties": {
            "organizationName": {
              "description": "The name of the organization.",
              "type": "string"
            },
            "projectName": {
              "description": "The name of the project.",
              "type": "string"
            },
            "stackName": {
              "description": "The name of the stack.",
              "type": "string"
            },
            "forceDestroy": {
              "description": "Optional. Flag indicating whether to delete the stack even if it still contains resources.",
              "type": "boolean"
            }
        },
        "required": [
            "organizationName",
            "projectName",
            "stackName"
        ],
        "inputProperties": {
          "organizationName": {
            "description": "The name of the organization.",
            "type": "string"
          },
          "projectName": {
            "description": "The name of the project.",
            "type": "string"
          },
          "stackName": {
            "description": "The name of the stack.",
            "type": "string"
          },
          "forceDestroy": {
            "description": "Optional. Flag indicating whether to delete the stack even if it still contains resources.",
            "type": "boolean"
          }
        },
        "requiredInputs": [
            "organizationName",
            "projectName",
            "stackName"
        ]
    },
    "apolloconfig:index:ApolloItem": {
      "description": "Agent Pool for customer managed deployments",
      "properties": {
        "appId": {
          "description": "The appId.",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace.",
          "type": "string"
        },
        "env": {
          "description": "The env.",
          "type": "string"
        },
        "clusterName": {
          "description": "The clusterName.",
          "type": "string"
        },
        "key": {
          "description": "The key.",
          "type": "string"
        },
        "value": {
          "description": "The value.",
          "type": "string"
        },
        "comment": {
          "description": "The comment.",
          "type": "string"
        },
        "operator": {
          "description": "The operator for delete item.",
          "type": "string"
        },
        "dataChangeCreatedBy": {
          "description": "The dataChangeCreatedBy.",
          "type": "string"
        },
        "dataChangeLastModifiedBy": {
          "description": "The dataChangeLastModifiedBy.",
          "type": "string"
        }
      },
      "required": [
      ],
      "inputProperties": {
        "appId": {
          "description": "The appId.",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace.",
          "type": "string"
        },
        "env": {
          "description": "The env.",
          "type": "string"
        },
        "clusterName": {
          "description": "The clusterName.",
          "type": "string"
        },
        "key": {
          "description": "The key.",
          "type": "string"
        },
        "value": {
          "description": "The value.",
          "type": "string"
        },
        "comment": {
          "description": "The comment.",
          "type": "string"
        },
        "operator": {
          "description": "The operator for delete item.",
          "type": "string"
        },
        "dataChangeCreatedBy": {
          "description": "The dataChangeCreatedBy.",
          "type": "string"
        },
        "dataChangeLastModifiedBy": {
          "description": "The dataChangeLastModifiedBy.",
          "type": "string"
        }
      },
      "requiredInputs": [
      ]
    },
    "apolloconfig:index:AgentPool": {
      "description": "Agent Pool for customer managed deployments",
      "properties": {
        "agentPoolId": {
          "description": "The agent pool identifier.",
          "type": "string"
        },
        "name": {
          "description": "The name of the agent pool.",
          "type": "string"
        },
        "description": {
          "description": "Description of the agent pool.",
          "type": "string"
        },
        "organizationName": {
          "description": "The organization's name.",
          "type": "string"
        },
        "tokenValue": {
          "description": "The agent pool's token's value.",
          "type": "string",
          "secret": true
        },
        "forceDestroy": {
          "description": "Optional. Flag indicating whether to delete the agent pool even if stacks are configured to use it.",
          "type": "boolean"
        }
      },
      "required": [
        "agentPoolId",
        "name",
        "organizationName",
        "tokenValue"
      ],
      "inputProperties": {
        "name": {
          "description": "Name of the agent pool.",
          "type": "string"
        },
        "description": {
          "description": "Description of the agent pool.",
          "type": "string"
        },
        "organizationName": {
          "description": "The organization's name.",
          "type": "string"
        },
        "forceDestroy": {
          "description": "Optional. Flag indicating whether to delete the agent pool even if stacks are configured to use it.",
          "type": "boolean"
        }
      },
      "requiredInputs": [
        "name",
        "organizationName"
      ]
    },
    "apolloconfig:index:AccessToken": {
      "description": "Access tokens allow a user to authenticate against the Pulumi Cloud",
      "properties": {
        "description": {
          "description": "Description of the access token.",
          "type": "string"
        },
        "value": {
          "description": "The token's value.",
          "type": "string",
          "secret": true
        }
      },
      "required": [
        "description",
        "value"
      ],
      "inputProperties": {
        "description": {
          "description": "Description of the access token.",
          "type": "string"
        }
      },
      "requiredInputs": [
        "description"
      ]
    }
  },
  "language": {
    "csharp": {
      "namespaces": {
        "apolloconfig": "apolloconfig"
      },
      "packageReferences": {
        "Pulumi": "3.*"
      }
    },
    "go": {
      "generateResourceContainerTypes": true,
      "importBasePath": "github.com/tangr/pulumi-apolloconfig/sdk/go/apolloconfig"
    },
    "nodejs": {
      "packageName": "@pulumi/apolloconfig",
      "dependencies": {
        "@pulumi/pulumi": "^3.0.0"
      }
    },
    "python": {
      "packageName": "pulumi_apolloconfig",
      "requires": {
        "pulumi": ">=3.0.0,<4.0.0"
      }
    }
  }
}
